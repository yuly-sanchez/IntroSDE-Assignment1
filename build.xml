<!-- 
	=============================================================
    	Introduction to Service Design and Engineering Laboratory
    	Description: ANT build script for this assignment #1 
    	Author: yuly.sanchez
	============================================================= 
-->

<project name="Assignment1" default="compile" basedir="." xmlns:ivy="antlib:org.apache.ivy.ant">


	<!-- PART 1: Ivy properties, download, installation and configuration -->
	<property name="ivy.install.version" value="2.4.0-rc1" />
	<property name="ivy.jar.dir" value="${basedir}/ivy" />
	<property name="ivy.jar.file" value="${ivy.jar.dir}/ivy.jar" />


	<!-- target: download-ivy this target will download ivy.jar if its not in the "ivy" folder yet -->
	<target name="download-ivy" unless="skip.download">
		<mkdir dir="${ivy.jar.dir}" />
		<echo message="installing ivy..." />
		<get src="http://repo1.maven.org/maven2/org/apache/ivy/ivy/${ivy.install.version}/ivy-${ivy.install.version}.jar" dest="${ivy.jar.file}" usetimestamp="true" />
	</target>

	<!-- target: install-ivy this target is not necessary if you put ivy.jar in your ant lib directory -->
	<target name="install-ivy" depends="download-ivy" description="--> installation ivy">
		<path id="ivy.lib.path">
			<fileset dir="${ivy.jar.dir}" includes="*.jar" />
		</path>
		<taskdef resource="org/apache/ivy/ant/antlib.xml" uri="antlib:org.apache.ivy.ant" classpathref="ivy.lib.path" />
	</target>


	<!-- PART 2: General properties definitions -->
	<property name="build.dir" value="build" />
	<property name="src.dir" value="src" />
	<property name="lib.dir" value="lib" />
	<property name="xjc.package" value="people.generated" />

	<!-- target: resolve downloads the dependencies to your lib folder -->
	<target name="resolve" depends="install-ivy" description="--> retrieve dependencies with ivy">
		<!--<ivy:retrieve pattern="${lib.dir}/[type]s-[artifact]-[revision].[ext]" />-->
		<ivy:retrieve pattern="${lib.dir}/[artifact]-[type]-[revision].[ext]" />
	</target>

	<!-- paths where ivy libraries will be downloaded, use them as classpathref in your compilation and running tasks  -->
	<path id="lib.path.id">
		<fileset dir="${lib.dir}" />
	</path>

	<path id="run.path.id">
		<path refid="lib.path.id" />
		<fileset dir="${build.dir}">
			<include name="*.class" />
			<include name="**/*.class" />
			<exclude name="**/*Test*" />
		</fileset>
	</path>


	<!-- PART 3: compilation targets for assignment #1 -->
	<target name="init" depends="install-ivy, resolve">
		<echo message="Init target has been called" />
		<mkdir dir="${build.dir}" />
		<echo message="${build.dir} has been created" />
	</target>

	<target name="generate">
		<taskdef name="xjc" classname="com.sun.tools.xjc.XJCTask" classpathref="lib.path.id" />
		<xjc schema="people.xsd" destdir="${src.dir}" package="assignment.${xjc.package}" />
	</target>

	<target name="compile" depends="init, generate">
		<echo message="Compile target has been called" />
		<javac srcdir="${src.dir}" destdir="${build.dir}" classpathref="lib.path.id" includeAntRuntime="false">
		</javac>
		<copy todir="${build.dir}" overwrite="true">
			<fileset dir="${src.dir}">
				<include name="*.xml" />
			</fileset>
		</copy>
	</target>

	<target name="clean">
		<echo message="Clean target has been called" />
		<delete dir="${build.dir}" />
		<echo message="${build.dir} has been deleted" />
		<delete dir="${src.dir}/assignment/people/generated" />
		<echo message="${src.dir}/assignment/people/generated has been deleted" />
	</target>


	<!-- PART 4: execution targets for assignment nÂ°1 -->
	<target name="execute.evaluation" depends="compile">
		<antcall target="execute.printAllPeople" />
		<antcall target="execute.HProfileByIDPerson" />
		<antcall target="execute.printPeopleByCondition" />
		<antcall target="execute.MarshallerAndUnmarshallerXML" />
		<antcall target="execute.MarshallerJSON" />
	</target>

	<target name="execute.printAllPeople">
		<echo message="Executing Health Profile Reader: will run instructions 2 based on Lab 3" />
		<java classname="assignment.src.HealthProfileReader" classpath="${build.dir}">
			<arg value="printAllPeople" />
		</java>
	</target>

	<target name="execute.HProfileByIDPerson">
		<echo message="Executing Health Profile Reader: will run instructions 3 based on Lab 3" />
		<java classname="assignment.src.HealthProfileReader" classpath="${build.dir}">
			<arg value="getHProfileByIDPerson" />
			<arg value="5" />
		</java>
	</target>

	<target name="execute.printPeopleByCondition">
		<echo message="Executing Health Profile Reader: will run instructions 4 based on Lab 3" />
		<java classname="assignment.src.HealthProfileReader" classpath="${build.dir}">
			<arg value="printPeopleByCondition" />
			<arg value="90" />
			<arg value=">" />
		</java>
	</target>

	<target name="execute.MarshallerAndUnmarshallerXML">
		<echo message="Executing Marshaller and UnMarshaller XML: will produce a people_new.xml in home folder and read the people_new.xml" />
		<java classname="assignment.src.JAXBAnnotationsXml" classpath="${build.dir}">
			<classpath>
				<fileset dir="${lib.dir}">
					<include name="**/*.jar" />
					<include name="*.jar" />
				</fileset>
			</classpath>
		</java>
	</target>

	<target name="execute.MarshallerJSON">
		<echo message="Executing Marshaller JSON: will produce a people_new.json in home folder" />
		<java classname="assignment.src.JAXBMarshallerJson" classpath="${build.dir}">
			<classpath>
				<fileset dir="${lib.dir}">
					<include name="**/*.jar" />
					<include name="*.jar" />
				</fileset>
			</classpath>
		</java>
	</target>

	<target name="execute.JAXBMarshaller">
		<echo message="Executing JAXBMarshallerXml using classes generated with JAXB XJC" />
		<java classname="assignment.people.JAXBMarshallerXml" classpath="${build.dir}">
			<classpath>
				<fileset dir="${lib.dir}">
					<include name="**/*.jar" />
					<include name="*.jar" />
				</fileset>
			</classpath>
		</java>
	</target>

	<target name="execute.JAXBUnMarshaller">
		<echo message="Executing JAXBUnMarshallerXml using classes generated with JAXB XJC" />
		<java classname="assignment.people.JAXBUnMarshallerXml" classpath="${build.dir}">
			<classpath>
				<fileset dir="${lib.dir}">
					<include name="**/*.jar" />
					<include name="*.jar" />
				</fileset>
			</classpath>
		</java>
	</target>

</project>